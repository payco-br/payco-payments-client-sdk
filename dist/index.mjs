import*as b from"valibot";import*as t from"valibot";import{cnpj as v,cpf as I}from"cpf-cnpj-validator";var d=(o=>(o.Mastercard="mastercard",o.Visa="visa",o.Amex="amex",o.Hipercard="hipercard",o.Elo="elo",o))(d||{}),l=t.object({holderName:t.string([t.regex(/^[a-zA-Z\s]+$/),t.minLength(2)]),holderDocument:t.string([t.custom(e=>!!(I.isValid(e)||v.isValid(e)),"invalid document, must be a valid CPF or CNPJ")]),number:t.string([t.regex(/^\d{16}$/),t.custom(e=>{let n=e[0];return!e.split("").every(r=>r===n)},"invalid card number, must be a valid credit card number")]),cardBrand:t.enum_(d),expirationMonth:t.string([t.regex(/^(0[1-9]|1[0-2])$/)]),expirationYear:t.string([t.regex(/^\d{2}$/)]),cvv:t.string([t.regex(/^\d{3}$/)])});import h from"axios";function u({baseURL:e}){return h.create({baseURL:e})}import{CompactEncrypt as k,importSPKI as w}from"jose";async function g({card:e,publicKey:n,keyId:r,verifyCard:a}){let i=new TextEncoder().encode(JSON.stringify({card_number:e.number,brand:e.cardBrand,card_holder_name:e.holderName,expiration_month:e.expirationMonth,expiration_year:e.expirationYear,verify_card:a,security_code:e.cvv})),o=await w(`-----BEGIN PUBLIC KEY-----
${n}
-----END PUBLIC KEY-----`,"RSA-OAEP-256");return{encryptedCard:await new k(i).setProtectedHeader({alg:"RSA-OAEP-256",enc:"A256GCM",kid:r}).encrypt(o)}}function m(){return{http_accept_browser_value:navigator.userAgent,http_accept_content:navigator.accept,http_browser_language:navigator.language,http_browser_java_enabled:navigator?.javaEnabled()||!1,http_browser_javascript_enabled:!0,http_browser_color_depth:window.screen.colorDepth,http_browser_screen_height:window.screen.height,http_browser_screen_width:window.screen.width,http_browser_time_difference:new Date().getTimezoneOffset().toString(),user_agent_browser_value:navigator.userAgent}}async function y({keyId:e,client:n}){try{return{publicKey:(await n.get(`api/v1/payments/card/public_key/${e}`)).data.public_key}}catch(r){throw console.error("Error getting public key",r),r}}function _({orgId:e,sessionId:n}){let r=n??window.crypto.randomUUID(),a=document.body,i=document.createElement("script");i.id="adiq",i.type="text/javascript",i.src=`https://h.online-metrix.net/fp/tags.js?org_id=${e}&session_id=adiq_br${r}`,a.appendChild(i);let o=document.createElement("script");o.type="text/javascript",o.id="kdtjs",o.async=!0,o.src="https://i.k-analytix.com/k.js",a.appendChild(o);let p=`
		<noscript>
			<iframe
				style="width: 100px; height: 100px; border: 0; position:absolute; top: -5000px;"
				src="https://h.online-metrix.net/fp/tags.js?org_id=${e}&session_id=adiq_br${r}"
			></iframe>
		</noscript>`;return a.insertAdjacentHTML("beforeend",p),r}async function f({encryptedCard:e,client:n}){try{return{token:(await n.post("/api/v1/payments/card/token",{token:e})).data.card_vault_token}}catch{throw new Error("Error trying to tokenize card data")}}function T(){return Konduto.getVisitorID()}function R(e){return Konduto.setCustomerID(e)}function L(e,n){Konduto.sendEvent(e,n)}var s,c,x;globalThis.__kdt=[];var F=async e=>{if(!e.keyId)throw new Error("keyId is required");let n=e.baseURL||"https://api.payments.payco.com.br/open";s=u({baseURL:n}),c=e.keyId;let r=e.orgId||"k8vif92e";if(e.installScripts??!0)__kdt.push({public_key:r},{post_on_load:!1}),x=_({orgId:r,sessionId:e.sessionId});else{if(!e.sessionId)throw new Error("sessionId is required when installScripts is false");x=e.sessionId}},J=async({cardData:e,verifyCard:n=!1})=>{let r=b.parse(l,e),{publicKey:a}=await y({client:s,keyId:c}),{encryptedCard:i}=await g({card:r,publicKey:a,keyId:c,verifyCard:n});return await f({encryptedCard:i,client:s})},Z=()=>m();export{L as addPageTag,s as client,Z as getDeviceInfo,T as getVisitorID,F as initialize,c as keyId,x as sessionId,R as setCustomerID,J as tokenize};
